---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gill-hicks
  namespace: default
  labels:
    k8s-app: gill-hicks
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: gill-hicks
  revisionHistoryLimit: 100
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: gill-hicks
    spec:
      containers:
      - name: portal
        image: ecliptik/gill-hicks:DOCKER_TAG
        args: ["/app/portal.py"]
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
          limits:
            memory: "300Mi"
            cpu: "1000m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
        - name: HARDWARE_HOST
          value: "hardware.default.svc.cluster.local"
      - name: hardware
        image: ecliptik/gill-hicks:DOCKER_TAG
        args: ["/app/hardware.py"]
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
          limits:
            memory: "300Mi"
            cpu: "1000m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5001
        envFrom:
        - secretRef:
            name: hardware
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: portal
    dns: route53
  name: portal
  namespace: default
spec:
  selector:
    k8s-app: gill-hicks
  ports:
  - name: http
    port: 5000
    protocol: TCP
    targetPort: 5000
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: portal
    dns: route53
  name: hardware
  namespace: default
spec:
  selector:
    k8s-app: gill-hicks
  ports:
  - name: http
    port: 5001
    protocol: TCP
    targetPort: 5001
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: gill-hicks
  namespace: default
  annotations:
   kubernetes.io/ingress.class: "alb"
   alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS": 443}]'
   alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-1-2017-01
   alb.ingress.kubernetes.io/scheme: internet-facing
   alb.ingress.kubernetes.io/actions.redirect: '{"Type": "redirect", "RedirectConfig":{ "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
   alb.ingress.kubernetes.io/target-type: ip
   alb.ingress.kubernetes.io/tags: environment=development,team=dsp,project=dsp,application=dsp-service
   alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=1800
   alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '15'
   alb.ingress.kubernetes.io/healthcheck-interval-seconds: '20'
   alb.ingress.kubernetes.io/certificate-arn:  arn:aws:acm:us-east-1:175694409265:certificate/e9bd437b-56bf-450c-ae66-578bb23d2bcd
   alb.ingress.kubernetes.io/subnets: subnet-0b06bc036c82f1499, subnet-0c9e5621f19cc1cd6
spec:
  rules:
  - http:
      paths:
      - backend:
          serviceName: redirect
          servicePort: use-annotation
        path: /*
  - host: portal.demo.ecliptik.com
    http:
      paths:
      - backend:
          serviceName: portal
          servicePort: 5000
        path: /*
